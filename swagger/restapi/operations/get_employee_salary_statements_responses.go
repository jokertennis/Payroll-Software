// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetEmployeeSalaryStatementsOKCode is the HTTP code returned for type GetEmployeeSalaryStatementsOK
const GetEmployeeSalaryStatementsOKCode int = 200

/*
GetEmployeeSalaryStatementsOK OK

swagger:response getEmployeeSalaryStatementsOK
*/
type GetEmployeeSalaryStatementsOK struct {

	/*
	  In: Body
	*/
	Payload *GetEmployeeSalaryStatementsOKBody `json:"body,omitempty"`
}

// NewGetEmployeeSalaryStatementsOK creates GetEmployeeSalaryStatementsOK with default headers values
func NewGetEmployeeSalaryStatementsOK() *GetEmployeeSalaryStatementsOK {

	return &GetEmployeeSalaryStatementsOK{}
}

// WithPayload adds the payload to the get employee salary statements o k response
func (o *GetEmployeeSalaryStatementsOK) WithPayload(payload *GetEmployeeSalaryStatementsOKBody) *GetEmployeeSalaryStatementsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get employee salary statements o k response
func (o *GetEmployeeSalaryStatementsOK) SetPayload(payload *GetEmployeeSalaryStatementsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEmployeeSalaryStatementsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEmployeeSalaryStatementsUnauthorizedCode is the HTTP code returned for type GetEmployeeSalaryStatementsUnauthorized
const GetEmployeeSalaryStatementsUnauthorizedCode int = 401

/*
GetEmployeeSalaryStatementsUnauthorized Unauthorized

swagger:response getEmployeeSalaryStatementsUnauthorized
*/
type GetEmployeeSalaryStatementsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *GetEmployeeSalaryStatementsUnauthorizedBody `json:"body,omitempty"`
}

// NewGetEmployeeSalaryStatementsUnauthorized creates GetEmployeeSalaryStatementsUnauthorized with default headers values
func NewGetEmployeeSalaryStatementsUnauthorized() *GetEmployeeSalaryStatementsUnauthorized {

	return &GetEmployeeSalaryStatementsUnauthorized{}
}

// WithPayload adds the payload to the get employee salary statements unauthorized response
func (o *GetEmployeeSalaryStatementsUnauthorized) WithPayload(payload *GetEmployeeSalaryStatementsUnauthorizedBody) *GetEmployeeSalaryStatementsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get employee salary statements unauthorized response
func (o *GetEmployeeSalaryStatementsUnauthorized) SetPayload(payload *GetEmployeeSalaryStatementsUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEmployeeSalaryStatementsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEmployeeSalaryStatementsNotFoundCode is the HTTP code returned for type GetEmployeeSalaryStatementsNotFound
const GetEmployeeSalaryStatementsNotFoundCode int = 404

/*
GetEmployeeSalaryStatementsNotFound NotFound

swagger:response getEmployeeSalaryStatementsNotFound
*/
type GetEmployeeSalaryStatementsNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetEmployeeSalaryStatementsNotFoundBody `json:"body,omitempty"`
}

// NewGetEmployeeSalaryStatementsNotFound creates GetEmployeeSalaryStatementsNotFound with default headers values
func NewGetEmployeeSalaryStatementsNotFound() *GetEmployeeSalaryStatementsNotFound {

	return &GetEmployeeSalaryStatementsNotFound{}
}

// WithPayload adds the payload to the get employee salary statements not found response
func (o *GetEmployeeSalaryStatementsNotFound) WithPayload(payload *GetEmployeeSalaryStatementsNotFoundBody) *GetEmployeeSalaryStatementsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get employee salary statements not found response
func (o *GetEmployeeSalaryStatementsNotFound) SetPayload(payload *GetEmployeeSalaryStatementsNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEmployeeSalaryStatementsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEmployeeSalaryStatementsInternalServerErrorCode is the HTTP code returned for type GetEmployeeSalaryStatementsInternalServerError
const GetEmployeeSalaryStatementsInternalServerErrorCode int = 500

/*
GetEmployeeSalaryStatementsInternalServerError Internal Server Error

swagger:response getEmployeeSalaryStatementsInternalServerError
*/
type GetEmployeeSalaryStatementsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetEmployeeSalaryStatementsInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetEmployeeSalaryStatementsInternalServerError creates GetEmployeeSalaryStatementsInternalServerError with default headers values
func NewGetEmployeeSalaryStatementsInternalServerError() *GetEmployeeSalaryStatementsInternalServerError {

	return &GetEmployeeSalaryStatementsInternalServerError{}
}

// WithPayload adds the payload to the get employee salary statements internal server error response
func (o *GetEmployeeSalaryStatementsInternalServerError) WithPayload(payload *GetEmployeeSalaryStatementsInternalServerErrorBody) *GetEmployeeSalaryStatementsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get employee salary statements internal server error response
func (o *GetEmployeeSalaryStatementsInternalServerError) SetPayload(payload *GetEmployeeSalaryStatementsInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEmployeeSalaryStatementsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
