// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetEmployeeSalaryStatementOKCode is the HTTP code returned for type GetEmployeeSalaryStatementOK
const GetEmployeeSalaryStatementOKCode int = 200

/*
GetEmployeeSalaryStatementOK OK

swagger:response getEmployeeSalaryStatementOK
*/
type GetEmployeeSalaryStatementOK struct {

	/*
	  In: Body
	*/
	Payload *GetEmployeeSalaryStatementOKBody `json:"body,omitempty"`
}

// NewGetEmployeeSalaryStatementOK creates GetEmployeeSalaryStatementOK with default headers values
func NewGetEmployeeSalaryStatementOK() *GetEmployeeSalaryStatementOK {

	return &GetEmployeeSalaryStatementOK{}
}

// WithPayload adds the payload to the get employee salary statement o k response
func (o *GetEmployeeSalaryStatementOK) WithPayload(payload *GetEmployeeSalaryStatementOKBody) *GetEmployeeSalaryStatementOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get employee salary statement o k response
func (o *GetEmployeeSalaryStatementOK) SetPayload(payload *GetEmployeeSalaryStatementOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEmployeeSalaryStatementOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEmployeeSalaryStatementUnauthorizedCode is the HTTP code returned for type GetEmployeeSalaryStatementUnauthorized
const GetEmployeeSalaryStatementUnauthorizedCode int = 401

/*
GetEmployeeSalaryStatementUnauthorized Unauthorized

swagger:response getEmployeeSalaryStatementUnauthorized
*/
type GetEmployeeSalaryStatementUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *GetEmployeeSalaryStatementUnauthorizedBody `json:"body,omitempty"`
}

// NewGetEmployeeSalaryStatementUnauthorized creates GetEmployeeSalaryStatementUnauthorized with default headers values
func NewGetEmployeeSalaryStatementUnauthorized() *GetEmployeeSalaryStatementUnauthorized {

	return &GetEmployeeSalaryStatementUnauthorized{}
}

// WithPayload adds the payload to the get employee salary statement unauthorized response
func (o *GetEmployeeSalaryStatementUnauthorized) WithPayload(payload *GetEmployeeSalaryStatementUnauthorizedBody) *GetEmployeeSalaryStatementUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get employee salary statement unauthorized response
func (o *GetEmployeeSalaryStatementUnauthorized) SetPayload(payload *GetEmployeeSalaryStatementUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEmployeeSalaryStatementUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEmployeeSalaryStatementInternalServerErrorCode is the HTTP code returned for type GetEmployeeSalaryStatementInternalServerError
const GetEmployeeSalaryStatementInternalServerErrorCode int = 500

/*
GetEmployeeSalaryStatementInternalServerError Internal Server Error

swagger:response getEmployeeSalaryStatementInternalServerError
*/
type GetEmployeeSalaryStatementInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetEmployeeSalaryStatementInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetEmployeeSalaryStatementInternalServerError creates GetEmployeeSalaryStatementInternalServerError with default headers values
func NewGetEmployeeSalaryStatementInternalServerError() *GetEmployeeSalaryStatementInternalServerError {

	return &GetEmployeeSalaryStatementInternalServerError{}
}

// WithPayload adds the payload to the get employee salary statement internal server error response
func (o *GetEmployeeSalaryStatementInternalServerError) WithPayload(payload *GetEmployeeSalaryStatementInternalServerErrorBody) *GetEmployeeSalaryStatementInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get employee salary statement internal server error response
func (o *GetEmployeeSalaryStatementInternalServerError) SetPayload(payload *GetEmployeeSalaryStatementInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEmployeeSalaryStatementInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
